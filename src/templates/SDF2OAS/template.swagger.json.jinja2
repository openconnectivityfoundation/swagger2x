{
  "swagger": "2.0",
  "info": {
    "title": "{{json_data['info']['title']}}",
    "version": "{{json_data['info']['version']}}",
    "license": {
      "name": "one Data Model License",
      "url": "{{json_data['info']['license']}}",
      "x-copyright": "{{json_data['info']['copyright']}}"
    },
    "termsOfService": "{{json_data['info']['license']}}"
  },
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
  "/{{json_data['info']['title']|classsyntax}}ResURI": {
      "get": {
        "description" : "{% for sdfObject, sdfObject_data in json_data['sdfObject'].items() %} {{sdfObject_data.description | replace('"','\\"')}}{%- endfor %}",
        "parameters": [
          {
            "$ref": "#/parameters/interface"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/{{json_data['info']['title']|classsyntax}}"
            }
          }
        }
      }{% if sdf_is_writeable(json_data) == True %},
      "post": {
        "parameters": [
            { "$ref": "#/parameters/interface" },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": { "$ref": "#/definitions/{{json_data['info']['title']|classsyntax}}" }
            }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/{{json_data['info']['title']|classsyntax}}"
            }
          }
        }
      }{% endif %}
    }
  },
  "parameters": {
    "interface": {
      "in": "query",
      "name": "if",
      "type": "string",
      "enum": [
        {% if sdf_is_writeable(json_data) == True %}"oic.if.a"{% else %}"oic.if.s"{% endif %},
        "oic.if.baseline"
      ]
    }
  },
  "definitions": { {% for sdfObject, sdfObject_data in json_data['sdfObject'].items() %} 
    "{{json_data['info']['title']|classsyntax}}" : {
      "properties": {
        "rt": {
          "description": "The Resource Type.",
          "items": {
            "enum": [
{% if "Open Connectivity Foundation" in json_data['info']['copyright']%}"oic.r.{{sdfObject}}"{% else %}"x.unknown.{{sdfObject}}"{% endif %}
            ],
            "type": "string"
          },
          "minItems": 1,
          "uniqueItems": true,
          "readOnly": true,
          "type": "array"
        },
        "n": {
          "$ref": "https://openconnectivityfoundation.github.io/core/schemas/oic.common.properties.core-schema.json#/definitions/n"
        },
        "if": {
          "description": "The OCF Interface set supported by this Resource.",
          "items": {
            "enum": [
              {% if sdf_is_writeable(json_data) == True %}"oic.if.a"{% else %}"oic.if.s"{% endif %},
              "oic.if.baseline"
            ],
            "type": "string"
          },
          "minItems": 1,
          "uniqueItems": true,
          "readOnly": true,
          "type": "array"
        },
       {% for sdfProp, sdfProp_data in sdfObject_data['sdfProperty'].items() %} 
        "{{sdfProp}}" : {{sdfProp_data | sdf_resolve_sdfRef |tojson(2)| replace("\\u0027","'")| replace('"units"','"x-units"')| replace('"label"','"x-label"')| replace('"subType"','"x-subType"') | replace('"readable":','"x-readable":')| replace('"writable": false','"readOnly": true') | replace('"writable": true','"readOnly": false')}}{{ "," if not loop.last }}{% endfor %}
      },
      "type": "object" {% if sdfObject_data['sdfRequired'] | length > 0  %},
      "required" : [{% for item in sdfObject_data['sdfRequired'] %} 
        {% set list1 = item.split('/') %}
        "{{list1[-1] | replace("0/sdfProperty/","") | replace("#/sdfProperty/","")}}"{{ "," if not loop.last }}{% endfor %}] {% endif %}
      {% endfor %}
    }
  } 
}